plugins {
    id 'com.android.application'
}

android {
    ndkVersion "28.2.13676358"
    compileSdk 35

    def appVersionCode = System.getenv("APPLICATION_VERSION_CODE") ?: "1"
    def appVersionName = System.getenv("APPLICATION_VERSION_NAME") ?: "1.0.0"
    defaultConfig {
        applicationId "pe.nikescar.bingtray"
        minSdk 21
        targetSdk 35
        versionCode appVersionCode.toInteger()
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // Load keystore properties
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    signingConfigs {
        // debug {
        //     storeFile file("debug.keystore")
        //     storePassword "android"
        //     keyAlias "androiddebugkey"
        //     keyPassword "android"
        // }
        
        release {
            if (keystorePropertiesFile.exists()) {
                // Use keystore.properties file
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            } else {
                // Use environment variables as fallback
                def envStorePassword = System.getenv("KEYSTORE_PASSWORD")
                def envKeyPassword = System.getenv("KEY_PASSWORD")
                
                if (envStorePassword && envKeyPassword) {
                    storeFile file("release.keystore")
                    storePassword envStorePassword
                    keyAlias "release"
                    keyPassword envKeyPassword
                }
                // If neither keystore.properties nor env vars exist, release will be unsigned
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (keystorePropertiesFile.exists() || (System.getenv("KEYSTORE_PASSWORD") && System.getenv("KEY_PASSWORD"))) {
                signingConfig signingConfigs.release
            }
            // If no signing config available, release will be unsigned
        }
    }


    if (System.getenv("ANDROID_SPLIT_BUILD") == "1") {
        splits {
            abi {
                enable true
                reset()
                include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64' // Specify desired ABIs
            universalApk false // Set to true to also build a universal APK
            }
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    // Explicitly configure source sets
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
        }
    }
    
    namespace 'pe.nikescar.bingtray'
}

dependencies {
    // Android core dependencies for Java compilation
    implementation 'androidx.core:core:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
}

